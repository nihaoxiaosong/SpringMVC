<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">

	<!-- 配置数据源 -->
	<!-- jdbc.properties文件位置的配置 -->
<!-- 	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations"
			value="classpath:jdbc.properties" />
	</bean> -->
	
	<bean id="propertyConfig" class="com.wanhang.fitness.common.util.PropertyPlaceholderConfigurerExt">
		<property name="locations" 
			value="classpath:jdbc.properties" />
	</bean>
	
	<!-- ehcache.xml文件位置的配置 -->
	<bean id="cacheManager" 
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"> 
		<property name="configLocation"
			value="classpath:ehcache.xml" /> 
	</bean>
	
	<!-- c3p0连接池配置 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!--连接池中保留的最小连接数。-->
		<property name="minPoolSize" value="5" />
		<!--连接池中保留的最大连接数. -->
		<property name="maxPoolSize" value="30" />
		<!--初始化时获取连接数，取值应在minPoolSize与maxPoolSize之间。-->
		<property name="initialPoolSize" value="5" />
		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。 -->
		<property name="maxIdleTime" value="18000" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。 -->
		<property name="acquireIncrement" value="5" />
		<!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements
		  属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
		  如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。 -->
		<property name="maxStatements" value="1000" />
		<!--定义在从数据库获取新连接失败后重复尝试的次数。 -->
		<property name="acquireRetryAttempts" value="30" />
		<!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效
		  保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试
		  获取连接失败后该数据源将申明已断开并永久关闭。 -->
		<property name="breakAfterAcquireFailure" value="false" />
		<!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的
		  时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable
		  等方法来提升连接测试的性能。 -->
		<property name="testConnectionOnCheckout"  value="false" />
		<!--两次连接中间隔时间，单位毫秒。 -->
		<property name="acquireRetryDelay" value="1000" />
		<!--如果设为true那么在取得连接的同时将校验连接的有效性。 -->
		<property name="testConnectionOnCheckin" value="true" />
		<!--c3p0将建一张名为Test的空表，并使用其自带的查询语句进行测试。如果定义了这个参数那么
		  属性preferredTestQuery将被忽略。你不能在这张Test表上进行任何操作，它将只供c3p0测试
		  使用。 -->
		<property name="automaticTestTable" value="c3p0TestTable" />
		<!--每1800秒检查所有连接池中的空闲连接。 -->
		<property name="idleConnectionTestPeriod" value="1800" />
		<!--当连接池用完时客户端调用getConnection()后等待获取新连接的时间，超时后将抛出
        SQLException,如设为0则无限期等待。单位毫秒。 -->
		<property name="checkoutTimeout" value="3000" />
	</bean>

	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mappers.xml文件 -->
		<property name="mapperLocations" value="classpath*:com/wanhang/fitness/mapper/*Mapper.xml"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wanhang.fitness.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- 配置事务 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 拦截器方式配置事物 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" isolation="READ_UNCOMMITTED" />
			<tx:method name="add*" propagation="REQUIRED" isolation="READ_UNCOMMITTED"  />
			<tx:method name="create*" propagation="REQUIRED" isolation="READ_UNCOMMITTED"  />
			<tx:method name="insert*" propagation="REQUIRED" isolation="READ_UNCOMMITTED"  />
			<tx:method name="update*" propagation="REQUIRED" isolation="READ_UNCOMMITTED"  />
			<tx:method name="merge*" propagation="REQUIRED" isolation="READ_UNCOMMITTED"  />
			<tx:method name="del*" propagation="REQUIRED" isolation="READ_UNCOMMITTED"  />
			<tx:method name="remove*" propagation="REQUIRED" isolation="READ_UNCOMMITTED"  />
			<tx:method name="put*" propagation="REQUIRED" isolation="READ_UNCOMMITTED"  />
			<tx:method name="use*" propagation="REQUIRED" isolation="READ_UNCOMMITTED"  />
			<!--hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到 -->
			<tx:method name="get*" propagation="REQUIRED" read-only="true" />
			<tx:method name="count*" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="list*" propagation="REQUIRED" read-only="true" />
			<tx:method name="*"  
                           propagation="REQUIRED"  
                           isolation="READ_UNCOMMITTED"  
                           timeout="-1"  
                           read-only="true"  
                           no-rollback-for=""   
                           rollback-for="java.lang.Exception"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="transactionMethods" expression="execution(* com.wanhang.fitness.service.impl..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="transactionMethods" />
	</aop:config>
	
	<!-- 开启自动扫描 -->
	<context:component-scan base-package="com.wanhang.fitness.dao" />
	<context:component-scan base-package="com.wanhang.fitness.service" />
	<!-- <context:annotation-config/> 
	<context:component-scan base-package="com.wanhang.fitness" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
	</context:component-scan> -->
	
</beans>